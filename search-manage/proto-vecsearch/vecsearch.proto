syntax = "proto3";

package vecsearchgrpc;
option go_package = "./recommender/vecsearchgrpc";

service VectorSearchGrpc {
    rpc listLoadedIndex(EmptyRequest)               returns (IndexList);
    rpc getIndexFromContainer(DefaultRequest) returns (IndexInfo);
    rpc createIndex(CreateIndexRequest)     returns (DefaultReply);
    rpc deleteIndex(DefaultRequest)         returns (DefaultReply);

    rpc loadIndex(DefaultRequest)           returns (DefaultReply);
    rpc unloadIndex(DefaultRequest)         returns (DefaultReply);

    rpc searchNeighbors(SearchRequest)     returns (SearchReply) {};
}

message EmptyRequest {}

message IndexList {
    repeated string indexName = 1;
    repeated uint64 numVectors = 2;
    repeated uint32 dim = 3;
}

message IndexInfo {
    string  indexName = 1;
    string  dataFilePath = 2;  
}

message CreateIndexRequest {
    string   indexName  = 1;
    uint64   numVectors = 2;
    uint32   dim        = 3;
    repeated float vecData = 4;
}

message SearchRequest {
    string  indexName = 1;
    uint32  numQueryVectors = 2;
    uint32  dim = 3;
    repeated float vecData = 4;
    uint32  numNeighbors = 5;  
}

message SearchReply {
    string status = 1;
    string message = 2;

    uint32 numQueryVectors = 3;
    uint32 numNeighbors = 4;
    repeated int64 I = 5;
    repeated float  D = 6;
}

message DefaultRequest {
    string  indexName  = 1;
}

message DefaultReply {
    string status = 1;
    string message = 2;
}